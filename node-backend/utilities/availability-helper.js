_days = [
    'Monday',
    'Tuesday',
    'Wednesday',
    'Thursday',
    'Friday',
    'Saturday',
    'Sunday',
];

const initialAvailablitySettings = {
    name: 'Default template',
    description: 'Autogenerated template for availability',
    dailyAvailabilities: _days.map((day, index) => ({
      dayIndex: index,
      timeSlots: [
        {
          start: { hour: 8, minutes: 0 },
          end: { hour: 20, minutes: 0 },
        }
      ],
      isAvailable: true,
      isVisible: true,
      isEditable: true,
    })),
    useRatio: 0.5, // 50% of the time is available for tasks
};

function calculateTotalAvailableTime(dailyAvailabilities) {
    return dailyAvailabilities.reduce(
      (total, availability) => {
        if (availability.isAvailable) {
          return (
            total +
            availability.timeSlots.reduce(
              (dayTotal, slot) =>
                dayTotal +
                (slot.end.hour - slot.start.hour) * 60 +
                (slot.end.minutes - slot.start.minutes),
              0
            )
          );
        }
        return total;
      },
      0
    );
}

function calculateAllocatableTime(dailyAvailabilities, useRatio) {
    const totalAvailableTime = calculateTotalAvailableTime(dailyAvailabilities);
    return Math.floor(totalAvailableTime * useRatio);
}

const createAvailabilitySettings = (initialSettings = initialAvailablitySettings)=> {
    // Create a copy of the initial settings and calculate total available time and allocatable time
    const completeSettings = {...initialSettings};
    completeSettings['totalAvailableTime'] = calculateTotalAvailableTime(completeSettings.dailyAvailabilities);
    completeSettings['allocatableTime'] = calculateAllocatableTime(completeSettings.dailyAvailabilities, completeSettings.useRatio);
    return completeSettings;
}


module.exports = {
  createAvailabilitySettings,
};